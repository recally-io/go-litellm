name: Reusable Docker Build and Push

on:
  workflow_call:
    inputs:
      binary_name:
        required: true
        type: string
        description: "Name of the binary to build (polyllm-cli or polyllm-server)"

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubicloud-standard-2

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      - name: Log into GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/recally-io/${{ inputs.binary_name }}
          tags: |
            # set latest tag for master or main branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            # branch event
            type=ref,event=branch
            # pull request event
            type=ref,event=pr
            # raw version like v1.2.0
            type=semver,pattern={{raw}}

      # Build and push Docker image with Buildx (don't push on PR)
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64,darwin/amd64,darwin/arm64
          cache-from: type=registry,ref=ghcr.io/recally-io/${{ inputs.binary_name }}:buildcache
          cache-to: type=registry,ref=ghcr.io/recally-io/${{ inputs.binary_name }}:buildcache,mode=max
          build-args: |
            BINARY_NAME=${{ inputs.binary_name }}
